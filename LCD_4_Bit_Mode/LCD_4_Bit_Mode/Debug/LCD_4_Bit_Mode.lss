
LCD_4_Bit_Mode.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000087a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000012  00800060  0000087a  000008ee  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000900  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000930  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  0000096c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b06  00000000  00000000  000009bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000703  00000000  00000000  000014c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003fa  00000000  00000000  00001bc5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000b0  00000000  00000000  00001fc0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003ea  00000000  00000000  00002070  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000031f  00000000  00000000  0000245a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  00002779  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
   4:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
   8:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
   c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  10:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  14:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  18:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  1c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  20:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  24:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  28:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  2c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  30:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  34:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  38:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  3c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  40:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  44:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  48:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  4c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  50:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>

00000054 <__trampolines_end>:
  54:	00 40       	sbci	r16, 0x00	; 0
  56:	7a 10       	cpse	r7, r10
  58:	f3 5a       	subi	r31, 0xA3	; 163
  5a:	00 a0       	ldd	r0, Z+32	; 0x20
  5c:	72 4e       	sbci	r23, 0xE2	; 226
  5e:	18 09       	sbc	r17, r8
  60:	00 10       	cpse	r0, r0
  62:	a5 d4       	rcall	.+2378   	; 0x9ae <__data_load_end+0x122>
  64:	e8 00       	.word	0x00e8	; ????
  66:	00 e8       	ldi	r16, 0x80	; 128
  68:	76 48       	sbci	r23, 0x86	; 134
  6a:	17 00       	.word	0x0017	; ????
  6c:	00 e4       	ldi	r16, 0x40	; 64
  6e:	0b 54       	subi	r16, 0x4B	; 75
  70:	02 00       	.word	0x0002	; ????
  72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
  74:	9a 3b       	cpi	r25, 0xBA	; 186
  76:	00 00       	nop
  78:	00 e1       	ldi	r16, 0x10	; 16
  7a:	f5 05       	cpc	r31, r5
  7c:	00 00       	nop
  7e:	80 96       	adiw	r24, 0x20	; 32
  80:	98 00       	.word	0x0098	; ????
  82:	00 00       	nop
  84:	40 42       	sbci	r20, 0x20	; 32
  86:	0f 00       	.word	0x000f	; ????
  88:	00 00       	nop
  8a:	a0 86       	std	Z+8, r10	; 0x08
  8c:	01 00       	.word	0x0001	; ????
  8e:	00 00       	nop
  90:	10 27       	eor	r17, r16
  92:	00 00       	nop
  94:	00 00       	nop
  96:	e8 03       	fmulsu	r22, r16
  98:	00 00       	nop
  9a:	00 00       	nop
  9c:	64 00       	.word	0x0064	; ????
  9e:	00 00       	nop
  a0:	00 00       	nop
  a2:	0a 00       	.word	0x000a	; ????
  a4:	00 00       	nop
  a6:	00 00       	nop
  a8:	01 00       	.word	0x0001	; ????
  aa:	00 00       	nop
  ac:	00 00       	nop
  ae:	2c 76       	andi	r18, 0x6C	; 108
  b0:	d8 88       	ldd	r13, Y+16	; 0x10
  b2:	dc 67       	ori	r29, 0x7C	; 124
  b4:	4f 08       	sbc	r4, r15
  b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
  b8:	c1 df       	rcall	.-126    	; 0x3c <__FUSE_REGION_LENGTH__+0x3a>
  ba:	ae 59       	subi	r26, 0x9E	; 158
  bc:	e1 b1       	in	r30, 0x01	; 1
  be:	b7 96       	adiw	r30, 0x27	; 39
  c0:	e5 e3       	ldi	r30, 0x35	; 53
  c2:	e4 53       	subi	r30, 0x34	; 52
  c4:	c6 3a       	cpi	r28, 0xA6	; 166
  c6:	e6 51       	subi	r30, 0x16	; 22
  c8:	99 76       	andi	r25, 0x69	; 105
  ca:	96 e8       	ldi	r25, 0x86	; 134
  cc:	e6 c2       	rjmp	.+1484   	; 0x69a <__ftoa_engine+0x62>
  ce:	84 26       	eor	r8, r20
  d0:	eb 89       	ldd	r30, Y+19	; 0x13
  d2:	8c 9b       	sbis	0x11, 4	; 17
  d4:	62 ed       	ldi	r22, 0xD2	; 210
  d6:	40 7c       	andi	r20, 0xC0	; 192
  d8:	6f fc       	.word	0xfc6f	; ????
  da:	ef bc       	out	0x2f, r14	; 47
  dc:	9c 9f       	mul	r25, r28
  de:	40 f2       	brcs	.-112    	; 0x70 <__trampolines_end+0x1c>
  e0:	ba a5       	ldd	r27, Y+42	; 0x2a
  e2:	6f a5       	ldd	r22, Y+47	; 0x2f
  e4:	f4 90       	lpm	r15, Z
  e6:	05 5a       	subi	r16, 0xA5	; 165
  e8:	2a f7       	brpl	.-54     	; 0xb4 <__trampolines_end+0x60>
  ea:	5c 93       	st	X, r21
  ec:	6b 6c       	ori	r22, 0xCB	; 203
  ee:	f9 67       	ori	r31, 0x79	; 121
  f0:	6d c1       	rjmp	.+730    	; 0x3cc <dtoa_prf+0x48>
  f2:	1b fc       	.word	0xfc1b	; ????
  f4:	e0 e4       	ldi	r30, 0x40	; 64
  f6:	0d 47       	sbci	r16, 0x7D	; 125
  f8:	fe f5       	brtc	.+126    	; 0x178 <__bad_interrupt>
  fa:	20 e6       	ldi	r18, 0x60	; 96
  fc:	b5 00       	.word	0x00b5	; ????
  fe:	d0 ed       	ldi	r29, 0xD0	; 208
 100:	90 2e       	mov	r9, r16
 102:	03 00       	.word	0x0003	; ????
 104:	94 35       	cpi	r25, 0x54	; 84
 106:	77 05       	cpc	r23, r7
 108:	00 80       	ld	r0, Z
 10a:	84 1e       	adc	r8, r20
 10c:	08 00       	.word	0x0008	; ????
 10e:	00 20       	and	r0, r0
 110:	4e 0a       	sbc	r4, r30
 112:	00 00       	nop
 114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
 116:	0c 33       	cpi	r16, 0x3C	; 60
 118:	33 33       	cpi	r19, 0x33	; 51
 11a:	33 0f       	add	r19, r19
 11c:	98 6e       	ori	r25, 0xE8	; 232
 11e:	12 83       	std	Z+2, r17	; 0x02
 120:	11 41       	sbci	r17, 0x11	; 17
 122:	ef 8d       	ldd	r30, Y+31	; 0x1f
 124:	21 14       	cp	r2, r1
 126:	89 3b       	cpi	r24, 0xB9	; 185
 128:	e6 55       	subi	r30, 0x56	; 86
 12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
 12c:	fe e6       	ldi	r31, 0x6E	; 110
 12e:	db 18       	sub	r13, r11
 130:	d1 84       	ldd	r13, Z+9	; 0x09
 132:	4b 38       	cpi	r20, 0x8B	; 139
 134:	1b f7       	brvc	.-58     	; 0xfc <__trampolines_end+0xa8>
 136:	7c 1d       	adc	r23, r12
 138:	90 1d       	adc	r25, r0
 13a:	a4 bb       	out	0x14, r26	; 20
 13c:	e4 24       	eor	r14, r4
 13e:	20 32       	cpi	r18, 0x20	; 32
 140:	84 72       	andi	r24, 0x24	; 36
 142:	5e 22       	and	r5, r30
 144:	81 00       	.word	0x0081	; ????
 146:	c9 f1       	breq	.+114    	; 0x1ba <SendCommand+0xe>
 148:	24 ec       	ldi	r18, 0xC4	; 196
 14a:	a1 e5       	ldi	r26, 0x51	; 81
 14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
 14e:	11 24       	eor	r1, r1
 150:	1f be       	out	0x3f, r1	; 63
 152:	cf e5       	ldi	r28, 0x5F	; 95
 154:	d8 e0       	ldi	r29, 0x08	; 8
 156:	de bf       	out	0x3e, r29	; 62
 158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
 15a:	10 e0       	ldi	r17, 0x00	; 0
 15c:	a0 e6       	ldi	r26, 0x60	; 96
 15e:	b0 e0       	ldi	r27, 0x00	; 0
 160:	ea e7       	ldi	r30, 0x7A	; 122
 162:	f8 e0       	ldi	r31, 0x08	; 8
 164:	02 c0       	rjmp	.+4      	; 0x16a <__do_copy_data+0x10>
 166:	05 90       	lpm	r0, Z+
 168:	0d 92       	st	X+, r0
 16a:	a2 37       	cpi	r26, 0x72	; 114
 16c:	b1 07       	cpc	r27, r17
 16e:	d9 f7       	brne	.-10     	; 0x166 <__do_copy_data+0xc>
 170:	0e 94 46 01 	call	0x28c	; 0x28c <main>
 174:	0c 94 3b 04 	jmp	0x876	; 0x876 <_exit>

00000178 <__bad_interrupt>:
 178:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000017c <EnableRoutine>:
	DataPortDirect = 0xFF;
}

void EnableRoutine(void)
{
	ControlPort |= 1 << EnablePin;
 17c:	82 b3       	in	r24, 0x12	; 18
 17e:	81 60       	ori	r24, 0x01	; 1
 180:	82 bb       	out	0x12, r24	; 18
	asm volatile ("nop");
 182:	00 00       	nop
	asm volatile ("nop");
 184:	00 00       	nop
	ControlPort &= ~(1 << EnablePin);
 186:	82 b3       	in	r24, 0x12	; 18
 188:	8e 7f       	andi	r24, 0xFE	; 254
 18a:	82 bb       	out	0x12, r24	; 18
 18c:	08 95       	ret

0000018e <CheckBusy>:
void Send_a_String(char *stringofchars, uint8_t x, uint8_t y);
void InitializeLCD(void);

void CheckBusy(void)
{
	DataPortDirect = 0x00;
 18e:	17 ba       	out	0x17, r1	; 23
	ControlPort |= 1 << ReadWrite;
 190:	82 b3       	in	r24, 0x12	; 18
 192:	82 60       	ori	r24, 0x02	; 2
 194:	82 bb       	out	0x12, r24	; 18
	ControlPort &= ~(1 << RegisterS);
 196:	82 b3       	in	r24, 0x12	; 18
 198:	8b 7f       	andi	r24, 0xFB	; 251
 19a:	82 bb       	out	0x12, r24	; 18
	while( DataPort >= 0x80)
 19c:	02 c0       	rjmp	.+4      	; 0x1a2 <CheckBusy+0x14>
	{
		EnableRoutine();
 19e:	0e 94 be 00 	call	0x17c	; 0x17c <EnableRoutine>
void CheckBusy(void)
{
	DataPortDirect = 0x00;
	ControlPort |= 1 << ReadWrite;
	ControlPort &= ~(1 << RegisterS);
	while( DataPort >= 0x80)
 1a2:	c7 99       	sbic	0x18, 7	; 24
 1a4:	fc cf       	rjmp	.-8      	; 0x19e <CheckBusy+0x10>
	{
		EnableRoutine();
	}
	DataPortDirect = 0xFF;
 1a6:	8f ef       	ldi	r24, 0xFF	; 255
 1a8:	87 bb       	out	0x17, r24	; 23
 1aa:	08 95       	ret

000001ac <SendCommand>:
	asm volatile ("nop");
	ControlPort &= ~(1 << EnablePin);
}

void SendCommand(unsigned char command)
{
 1ac:	cf 93       	push	r28
 1ae:	c8 2f       	mov	r28, r24
	CheckBusy();
 1b0:	0e 94 c7 00 	call	0x18e	; 0x18e <CheckBusy>
	DataPort = command & 0xF0;							// command value is masked with 0xF0 to extract upper nibble i.e. 4 MSB bits
 1b4:	8c 2f       	mov	r24, r28
 1b6:	80 7f       	andi	r24, 0xF0	; 240
 1b8:	88 bb       	out	0x18, r24	; 24
	ControlPort &= ~(1 << ReadWrite | 1 << RegisterS);	// upper nibble is sent to LCD
 1ba:	82 b3       	in	r24, 0x12	; 18
 1bc:	89 7f       	andi	r24, 0xF9	; 249
 1be:	82 bb       	out	0x12, r24	; 18
	EnableRoutine();
 1c0:	0e 94 be 00 	call	0x17c	; 0x17c <EnableRoutine>
	DataPort = 0x00;
 1c4:	18 ba       	out	0x18, r1	; 24
	DataPort = command << 4;							// command value is shifted by 4 bits to the left to extract lower nibble
 1c6:	c2 95       	swap	r28
 1c8:	c0 7f       	andi	r28, 0xF0	; 240
 1ca:	c8 bb       	out	0x18, r28	; 24
	EnableRoutine();									// lower nibble is sent
 1cc:	0e 94 be 00 	call	0x17c	; 0x17c <EnableRoutine>
	DataPort = 0x00;
 1d0:	18 ba       	out	0x18, r1	; 24
}
 1d2:	cf 91       	pop	r28
 1d4:	08 95       	ret

000001d6 <SendData>:

void SendData(unsigned char data_char)
{
 1d6:	cf 93       	push	r28
 1d8:	c8 2f       	mov	r28, r24
	CheckBusy();
 1da:	0e 94 c7 00 	call	0x18e	; 0x18e <CheckBusy>
	DataPort = data_char & 0xF0;			// data_char value is masked with 0xF0 to extract upper nibble i.e. 4 MSB bits
 1de:	8c 2f       	mov	r24, r28
 1e0:	80 7f       	andi	r24, 0xF0	; 240
 1e2:	88 bb       	out	0x18, r24	; 24
	ControlPort &= ~(1 << ReadWrite);		// upper nibble is sent to LCD
 1e4:	82 b3       	in	r24, 0x12	; 18
 1e6:	8d 7f       	andi	r24, 0xFD	; 253
 1e8:	82 bb       	out	0x12, r24	; 18
	ControlPort |= 1 << RegisterS;
 1ea:	82 b3       	in	r24, 0x12	; 18
 1ec:	84 60       	ori	r24, 0x04	; 4
 1ee:	82 bb       	out	0x12, r24	; 18
	EnableRoutine();
 1f0:	0e 94 be 00 	call	0x17c	; 0x17c <EnableRoutine>
	DataPort = 0x00;
 1f4:	18 ba       	out	0x18, r1	; 24
	DataPort = data_char << 4;				// data_char value is shifted by 4 bits to the left to extract lower nibble i.e. 4 LSB bits 
 1f6:	c2 95       	swap	r28
 1f8:	c0 7f       	andi	r28, 0xF0	; 240
 1fa:	c8 bb       	out	0x18, r28	; 24
	EnableRoutine();						// lower nibble is sent
 1fc:	0e 94 be 00 	call	0x17c	; 0x17c <EnableRoutine>
	DataPort = 0x00;	
 200:	18 ba       	out	0x18, r1	; 24
}
 202:	cf 91       	pop	r28
 204:	08 95       	ret

00000206 <Send_a_String>:
void Send_a_String(char *stringofchars, uint8_t x, uint8_t y)
{ 
 206:	cf 93       	push	r28
 208:	df 93       	push	r29
 20a:	ec 01       	movw	r28, r24
	// x and y are location co-ordinates on the LCD
	// x represents the line number 0 is first line and 1 is second line
	// y represents the column number 
	
	if(x == 0)
 20c:	61 11       	cpse	r22, r1
 20e:	05 c0       	rjmp	.+10     	; 0x21a <Send_a_String+0x14>
	{
		// Send data to first line
		SendCommand(0x80+y);
 210:	80 e8       	ldi	r24, 0x80	; 128
 212:	84 0f       	add	r24, r20
 214:	0e 94 d6 00 	call	0x1ac	; 0x1ac <SendCommand>
 218:	08 c0       	rjmp	.+16     	; 0x22a <Send_a_String+0x24>
	}
	else
	{
		// Send data to second line
		SendCommand(0xC0+y);
 21a:	80 ec       	ldi	r24, 0xC0	; 192
 21c:	84 0f       	add	r24, r20
 21e:	0e 94 d6 00 	call	0x1ac	; 0x1ac <SendCommand>
 222:	03 c0       	rjmp	.+6      	; 0x22a <Send_a_String+0x24>
	}
	
	while(*stringofchars > 0)
	{
		SendData(*stringofchars++);
 224:	21 96       	adiw	r28, 0x01	; 1
 226:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <SendData>
	{
		// Send data to second line
		SendCommand(0xC0+y);
	}
	
	while(*stringofchars > 0)
 22a:	88 81       	ld	r24, Y
 22c:	81 11       	cpse	r24, r1
 22e:	fa cf       	rjmp	.-12     	; 0x224 <Send_a_String+0x1e>
	{
		SendData(*stringofchars++);
	}
}
 230:	df 91       	pop	r29
 232:	cf 91       	pop	r28
 234:	08 95       	ret

00000236 <InitializeLCD>:

void InitializeLCD(void)
{
    ControlPortDirect |= ( 1 << EnablePin | 1 << ReadWrite | 1 << RegisterS);
 236:	81 b3       	in	r24, 0x11	; 17
 238:	87 60       	ori	r24, 0x07	; 7
 23a:	81 bb       	out	0x11, r24	; 17
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 23c:	85 ea       	ldi	r24, 0xA5	; 165
 23e:	9e e0       	ldi	r25, 0x0E	; 14
 240:	01 97       	sbiw	r24, 0x01	; 1
 242:	f1 f7       	brne	.-4      	; 0x240 <InitializeLCD+0xa>
 244:	00 c0       	rjmp	.+0      	; 0x246 <InitializeLCD+0x10>
 246:	00 00       	nop
    _delay_ms(15);
    
    SendCommand(0x01); // Clear Screen
 248:	81 e0       	ldi	r24, 0x01	; 1
 24a:	0e 94 d6 00 	call	0x1ac	; 0x1ac <SendCommand>
 24e:	83 ef       	ldi	r24, 0xF3	; 243
 250:	91 e0       	ldi	r25, 0x01	; 1
 252:	01 97       	sbiw	r24, 0x01	; 1
 254:	f1 f7       	brne	.-4      	; 0x252 <InitializeLCD+0x1c>
 256:	00 c0       	rjmp	.+0      	; 0x258 <InitializeLCD+0x22>
 258:	00 00       	nop
    _delay_ms(2);
    SendCommand(0x02); // 4 Bit mode
 25a:	82 e0       	ldi	r24, 0x02	; 2
 25c:	0e 94 d6 00 	call	0x1ac	; 0x1ac <SendCommand>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 260:	90 e1       	ldi	r25, 0x10	; 16
 262:	9a 95       	dec	r25
 264:	f1 f7       	brne	.-4      	; 0x262 <InitializeLCD+0x2c>
 266:	00 c0       	rjmp	.+0      	; 0x268 <InitializeLCD+0x32>
    _delay_us(50);
	SendCommand(0x28); // Function Set: 4-bit, 2 Line, 5x7 Dots
 268:	88 e2       	ldi	r24, 0x28	; 40
 26a:	0e 94 d6 00 	call	0x1ac	; 0x1ac <SendCommand>
 26e:	80 e1       	ldi	r24, 0x10	; 16
 270:	8a 95       	dec	r24
 272:	f1 f7       	brne	.-4      	; 0x270 <InitializeLCD+0x3a>
 274:	00 c0       	rjmp	.+0      	; 0x276 <InitializeLCD+0x40>
	_delay_us(50);
	SendCommand(0x06); // 	Entry Mode
 276:	86 e0       	ldi	r24, 0x06	; 6
 278:	0e 94 d6 00 	call	0x1ac	; 0x1ac <SendCommand>
    SendCommand(0b00001100); // Cursor Settings Display on Cursor off
 27c:	8c e0       	ldi	r24, 0x0C	; 12
 27e:	0e 94 d6 00 	call	0x1ac	; 0x1ac <SendCommand>
 282:	90 e1       	ldi	r25, 0x10	; 16
 284:	9a 95       	dec	r25
 286:	f1 f7       	brne	.-4      	; 0x284 <InitializeLCD+0x4e>
 288:	00 c0       	rjmp	.+0      	; 0x28a <InitializeLCD+0x54>
 28a:	08 95       	ret

0000028c <main>:
#include <stdlib.h>
#include "LCDLibrary.h"			  // The LCD library holds all the LCD functions


int main(void)
{
 28c:	cf 93       	push	r28
 28e:	df 93       	push	r29
 290:	cd b7       	in	r28, 0x3d	; 61
 292:	de b7       	in	r29, 0x3e	; 62
 294:	27 97       	sbiw	r28, 0x07	; 7
 296:	0f b6       	in	r0, 0x3f	; 63
 298:	f8 94       	cli
 29a:	de bf       	out	0x3e, r29	; 62
 29c:	0f be       	out	0x3f, r0	; 63
 29e:	cd bf       	out	0x3d, r28	; 61
	InitializeLCD();			  
 2a0:	0e 94 1b 01 	call	0x236	; 0x236 <InitializeLCD>
	
	Send_a_String("Integer: ",0,0);		// Send_a_String function is modified to accept x and y location co-ordinates for string placement on LCD
 2a4:	40 e0       	ldi	r20, 0x00	; 0
 2a6:	60 e0       	ldi	r22, 0x00	; 0
 2a8:	80 e6       	ldi	r24, 0x60	; 96
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	0e 94 03 01 	call	0x206	; 0x206 <Send_a_String>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 2b0:	4a e0       	ldi	r20, 0x0A	; 10
 2b2:	be 01       	movw	r22, r28
 2b4:	6f 5f       	subi	r22, 0xFF	; 255
 2b6:	7f 4f       	sbci	r23, 0xFF	; 255
 2b8:	82 e3       	ldi	r24, 0x32	; 50
 2ba:	90 e0       	ldi	r25, 0x00	; 0
 2bc:	0e 94 9d 01 	call	0x33a	; 0x33a <__itoa_ncheck>
	uint8_t a = 50;
	char    b[2];
	itoa(a,b,10);				
	Send_a_String(b,0,9);				// Send_a_String function is modified to accept x and y location co-ordinates for string placement on LCD
 2c0:	49 e0       	ldi	r20, 0x09	; 9
 2c2:	60 e0       	ldi	r22, 0x00	; 0
 2c4:	ce 01       	movw	r24, r28
 2c6:	01 96       	adiw	r24, 0x01	; 1
 2c8:	0e 94 03 01 	call	0x206	; 0x206 <Send_a_String>
	
	Send_a_String("Float: ",1,0);		// Send_a_String function is modified to accept x and y location co-ordinates for string placement on LCD
 2cc:	40 e0       	ldi	r20, 0x00	; 0
 2ce:	61 e0       	ldi	r22, 0x01	; 1
 2d0:	8a e6       	ldi	r24, 0x6A	; 106
 2d2:	90 e0       	ldi	r25, 0x00	; 0
 2d4:	0e 94 03 01 	call	0x206	; 0x206 <Send_a_String>
	uint8_t number =175;
	float result;
	result = number/3.0;        
	char output[5];
	dtostrf(result,5,2,output); 
 2d8:	8e 01       	movw	r16, r28
 2da:	0d 5f       	subi	r16, 0xFD	; 253
 2dc:	1f 4f       	sbci	r17, 0xFF	; 255
 2de:	22 e0       	ldi	r18, 0x02	; 2
 2e0:	45 e0       	ldi	r20, 0x05	; 5
 2e2:	65 e5       	ldi	r22, 0x55	; 85
 2e4:	75 e5       	ldi	r23, 0x55	; 85
 2e6:	89 e6       	ldi	r24, 0x69	; 105
 2e8:	92 e4       	ldi	r25, 0x42	; 66
 2ea:	0e 94 7d 01 	call	0x2fa	; 0x2fa <dtostrf>
	Send_a_String(output,1,7);			// Send_a_String function is modified to accept x and y location co-ordinates for string placement on LCD
 2ee:	47 e0       	ldi	r20, 0x07	; 7
 2f0:	61 e0       	ldi	r22, 0x01	; 1
 2f2:	c8 01       	movw	r24, r16
 2f4:	0e 94 03 01 	call	0x206	; 0x206 <Send_a_String>
 2f8:	ff cf       	rjmp	.-2      	; 0x2f8 <main+0x6c>

000002fa <dtostrf>:
 2fa:	ef 92       	push	r14
 2fc:	0f 93       	push	r16
 2fe:	1f 93       	push	r17
 300:	cf 93       	push	r28
 302:	df 93       	push	r29
 304:	e8 01       	movw	r28, r16
 306:	47 fd       	sbrc	r20, 7
 308:	02 c0       	rjmp	.+4      	; 0x30e <dtostrf+0x14>
 30a:	34 e0       	ldi	r19, 0x04	; 4
 30c:	01 c0       	rjmp	.+2      	; 0x310 <dtostrf+0x16>
 30e:	34 e1       	ldi	r19, 0x14	; 20
 310:	04 2e       	mov	r0, r20
 312:	00 0c       	add	r0, r0
 314:	55 0b       	sbc	r21, r21
 316:	57 ff       	sbrs	r21, 7
 318:	03 c0       	rjmp	.+6      	; 0x320 <dtostrf+0x26>
 31a:	51 95       	neg	r21
 31c:	41 95       	neg	r20
 31e:	51 09       	sbc	r21, r1
 320:	e3 2e       	mov	r14, r19
 322:	02 2f       	mov	r16, r18
 324:	24 2f       	mov	r18, r20
 326:	ae 01       	movw	r20, r28
 328:	0e 94 c2 01 	call	0x384	; 0x384 <dtoa_prf>
 32c:	ce 01       	movw	r24, r28
 32e:	df 91       	pop	r29
 330:	cf 91       	pop	r28
 332:	1f 91       	pop	r17
 334:	0f 91       	pop	r16
 336:	ef 90       	pop	r14
 338:	08 95       	ret

0000033a <__itoa_ncheck>:
 33a:	bb 27       	eor	r27, r27
 33c:	4a 30       	cpi	r20, 0x0A	; 10
 33e:	31 f4       	brne	.+12     	; 0x34c <__itoa_ncheck+0x12>
 340:	99 23       	and	r25, r25
 342:	22 f4       	brpl	.+8      	; 0x34c <__itoa_ncheck+0x12>
 344:	bd e2       	ldi	r27, 0x2D	; 45
 346:	90 95       	com	r25
 348:	81 95       	neg	r24
 34a:	9f 4f       	sbci	r25, 0xFF	; 255
 34c:	0c 94 a9 01 	jmp	0x352	; 0x352 <__utoa_common>

00000350 <__utoa_ncheck>:
 350:	bb 27       	eor	r27, r27

00000352 <__utoa_common>:
 352:	fb 01       	movw	r30, r22
 354:	55 27       	eor	r21, r21
 356:	aa 27       	eor	r26, r26
 358:	88 0f       	add	r24, r24
 35a:	99 1f       	adc	r25, r25
 35c:	aa 1f       	adc	r26, r26
 35e:	a4 17       	cp	r26, r20
 360:	10 f0       	brcs	.+4      	; 0x366 <__utoa_common+0x14>
 362:	a4 1b       	sub	r26, r20
 364:	83 95       	inc	r24
 366:	50 51       	subi	r21, 0x10	; 16
 368:	b9 f7       	brne	.-18     	; 0x358 <__utoa_common+0x6>
 36a:	a0 5d       	subi	r26, 0xD0	; 208
 36c:	aa 33       	cpi	r26, 0x3A	; 58
 36e:	08 f0       	brcs	.+2      	; 0x372 <__utoa_common+0x20>
 370:	a9 5d       	subi	r26, 0xD9	; 217
 372:	a1 93       	st	Z+, r26
 374:	00 97       	sbiw	r24, 0x00	; 0
 376:	79 f7       	brne	.-34     	; 0x356 <__utoa_common+0x4>
 378:	b1 11       	cpse	r27, r1
 37a:	b1 93       	st	Z+, r27
 37c:	11 92       	st	Z+, r1
 37e:	cb 01       	movw	r24, r22
 380:	0c 94 f4 03 	jmp	0x7e8	; 0x7e8 <strrev>

00000384 <dtoa_prf>:
 384:	a9 e0       	ldi	r26, 0x09	; 9
 386:	b0 e0       	ldi	r27, 0x00	; 0
 388:	e8 ec       	ldi	r30, 0xC8	; 200
 38a:	f1 e0       	ldi	r31, 0x01	; 1
 38c:	0c 94 0a 04 	jmp	0x814	; 0x814 <__prologue_saves__+0xc>
 390:	6a 01       	movw	r12, r20
 392:	12 2f       	mov	r17, r18
 394:	b0 2e       	mov	r11, r16
 396:	2b e3       	ldi	r18, 0x3B	; 59
 398:	20 17       	cp	r18, r16
 39a:	20 f0       	brcs	.+8      	; 0x3a4 <dtoa_prf+0x20>
 39c:	ff 24       	eor	r15, r15
 39e:	f3 94       	inc	r15
 3a0:	f0 0e       	add	r15, r16
 3a2:	02 c0       	rjmp	.+4      	; 0x3a8 <dtoa_prf+0x24>
 3a4:	2c e3       	ldi	r18, 0x3C	; 60
 3a6:	f2 2e       	mov	r15, r18
 3a8:	0f 2d       	mov	r16, r15
 3aa:	27 e0       	ldi	r18, 0x07	; 7
 3ac:	ae 01       	movw	r20, r28
 3ae:	4f 5f       	subi	r20, 0xFF	; 255
 3b0:	5f 4f       	sbci	r21, 0xFF	; 255
 3b2:	0e 94 1c 03 	call	0x638	; 0x638 <__ftoa_engine>
 3b6:	bc 01       	movw	r22, r24
 3b8:	49 81       	ldd	r20, Y+1	; 0x01
 3ba:	84 2f       	mov	r24, r20
 3bc:	89 70       	andi	r24, 0x09	; 9
 3be:	81 30       	cpi	r24, 0x01	; 1
 3c0:	31 f0       	breq	.+12     	; 0x3ce <dtoa_prf+0x4a>
 3c2:	e1 fc       	sbrc	r14, 1
 3c4:	06 c0       	rjmp	.+12     	; 0x3d2 <dtoa_prf+0x4e>
 3c6:	e0 fe       	sbrs	r14, 0
 3c8:	06 c0       	rjmp	.+12     	; 0x3d6 <dtoa_prf+0x52>
 3ca:	90 e2       	ldi	r25, 0x20	; 32
 3cc:	05 c0       	rjmp	.+10     	; 0x3d8 <dtoa_prf+0x54>
 3ce:	9d e2       	ldi	r25, 0x2D	; 45
 3d0:	03 c0       	rjmp	.+6      	; 0x3d8 <dtoa_prf+0x54>
 3d2:	9b e2       	ldi	r25, 0x2B	; 43
 3d4:	01 c0       	rjmp	.+2      	; 0x3d8 <dtoa_prf+0x54>
 3d6:	90 e0       	ldi	r25, 0x00	; 0
 3d8:	5e 2d       	mov	r21, r14
 3da:	50 71       	andi	r21, 0x10	; 16
 3dc:	43 ff       	sbrs	r20, 3
 3de:	3c c0       	rjmp	.+120    	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
 3e0:	91 11       	cpse	r25, r1
 3e2:	02 c0       	rjmp	.+4      	; 0x3e8 <dtoa_prf+0x64>
 3e4:	83 e0       	ldi	r24, 0x03	; 3
 3e6:	01 c0       	rjmp	.+2      	; 0x3ea <dtoa_prf+0x66>
 3e8:	84 e0       	ldi	r24, 0x04	; 4
 3ea:	81 17       	cp	r24, r17
 3ec:	18 f4       	brcc	.+6      	; 0x3f4 <dtoa_prf+0x70>
 3ee:	21 2f       	mov	r18, r17
 3f0:	28 1b       	sub	r18, r24
 3f2:	01 c0       	rjmp	.+2      	; 0x3f6 <dtoa_prf+0x72>
 3f4:	20 e0       	ldi	r18, 0x00	; 0
 3f6:	51 11       	cpse	r21, r1
 3f8:	0b c0       	rjmp	.+22     	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 3fa:	f6 01       	movw	r30, r12
 3fc:	82 2f       	mov	r24, r18
 3fe:	30 e2       	ldi	r19, 0x20	; 32
 400:	88 23       	and	r24, r24
 402:	19 f0       	breq	.+6      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 404:	31 93       	st	Z+, r19
 406:	81 50       	subi	r24, 0x01	; 1
 408:	fb cf       	rjmp	.-10     	; 0x400 <__EEPROM_REGION_LENGTH__>
 40a:	c2 0e       	add	r12, r18
 40c:	d1 1c       	adc	r13, r1
 40e:	20 e0       	ldi	r18, 0x00	; 0
 410:	99 23       	and	r25, r25
 412:	29 f0       	breq	.+10     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 414:	d6 01       	movw	r26, r12
 416:	9c 93       	st	X, r25
 418:	f6 01       	movw	r30, r12
 41a:	31 96       	adiw	r30, 0x01	; 1
 41c:	6f 01       	movw	r12, r30
 41e:	c6 01       	movw	r24, r12
 420:	03 96       	adiw	r24, 0x03	; 3
 422:	e2 fe       	sbrs	r14, 2
 424:	0a c0       	rjmp	.+20     	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
 426:	3e e4       	ldi	r19, 0x4E	; 78
 428:	d6 01       	movw	r26, r12
 42a:	3c 93       	st	X, r19
 42c:	41 e4       	ldi	r20, 0x41	; 65
 42e:	11 96       	adiw	r26, 0x01	; 1
 430:	4c 93       	st	X, r20
 432:	11 97       	sbiw	r26, 0x01	; 1
 434:	12 96       	adiw	r26, 0x02	; 2
 436:	3c 93       	st	X, r19
 438:	06 c0       	rjmp	.+12     	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
 43a:	3e e6       	ldi	r19, 0x6E	; 110
 43c:	f6 01       	movw	r30, r12
 43e:	30 83       	st	Z, r19
 440:	41 e6       	ldi	r20, 0x61	; 97
 442:	41 83       	std	Z+1, r20	; 0x01
 444:	32 83       	std	Z+2, r19	; 0x02
 446:	fc 01       	movw	r30, r24
 448:	32 2f       	mov	r19, r18
 44a:	40 e2       	ldi	r20, 0x20	; 32
 44c:	33 23       	and	r19, r19
 44e:	09 f4       	brne	.+2      	; 0x452 <__EEPROM_REGION_LENGTH__+0x52>
 450:	42 c0       	rjmp	.+132    	; 0x4d6 <__EEPROM_REGION_LENGTH__+0xd6>
 452:	41 93       	st	Z+, r20
 454:	31 50       	subi	r19, 0x01	; 1
 456:	fa cf       	rjmp	.-12     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
 458:	42 ff       	sbrs	r20, 2
 45a:	44 c0       	rjmp	.+136    	; 0x4e4 <__EEPROM_REGION_LENGTH__+0xe4>
 45c:	91 11       	cpse	r25, r1
 45e:	02 c0       	rjmp	.+4      	; 0x464 <__EEPROM_REGION_LENGTH__+0x64>
 460:	83 e0       	ldi	r24, 0x03	; 3
 462:	01 c0       	rjmp	.+2      	; 0x466 <__EEPROM_REGION_LENGTH__+0x66>
 464:	84 e0       	ldi	r24, 0x04	; 4
 466:	81 17       	cp	r24, r17
 468:	18 f4       	brcc	.+6      	; 0x470 <__EEPROM_REGION_LENGTH__+0x70>
 46a:	21 2f       	mov	r18, r17
 46c:	28 1b       	sub	r18, r24
 46e:	01 c0       	rjmp	.+2      	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
 470:	20 e0       	ldi	r18, 0x00	; 0
 472:	51 11       	cpse	r21, r1
 474:	0b c0       	rjmp	.+22     	; 0x48c <__EEPROM_REGION_LENGTH__+0x8c>
 476:	f6 01       	movw	r30, r12
 478:	82 2f       	mov	r24, r18
 47a:	30 e2       	ldi	r19, 0x20	; 32
 47c:	88 23       	and	r24, r24
 47e:	19 f0       	breq	.+6      	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
 480:	31 93       	st	Z+, r19
 482:	81 50       	subi	r24, 0x01	; 1
 484:	fb cf       	rjmp	.-10     	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
 486:	c2 0e       	add	r12, r18
 488:	d1 1c       	adc	r13, r1
 48a:	20 e0       	ldi	r18, 0x00	; 0
 48c:	99 23       	and	r25, r25
 48e:	29 f0       	breq	.+10     	; 0x49a <__EEPROM_REGION_LENGTH__+0x9a>
 490:	d6 01       	movw	r26, r12
 492:	9c 93       	st	X, r25
 494:	f6 01       	movw	r30, r12
 496:	31 96       	adiw	r30, 0x01	; 1
 498:	6f 01       	movw	r12, r30
 49a:	c6 01       	movw	r24, r12
 49c:	03 96       	adiw	r24, 0x03	; 3
 49e:	e2 fe       	sbrs	r14, 2
 4a0:	0b c0       	rjmp	.+22     	; 0x4b8 <__EEPROM_REGION_LENGTH__+0xb8>
 4a2:	39 e4       	ldi	r19, 0x49	; 73
 4a4:	d6 01       	movw	r26, r12
 4a6:	3c 93       	st	X, r19
 4a8:	3e e4       	ldi	r19, 0x4E	; 78
 4aa:	11 96       	adiw	r26, 0x01	; 1
 4ac:	3c 93       	st	X, r19
 4ae:	11 97       	sbiw	r26, 0x01	; 1
 4b0:	36 e4       	ldi	r19, 0x46	; 70
 4b2:	12 96       	adiw	r26, 0x02	; 2
 4b4:	3c 93       	st	X, r19
 4b6:	07 c0       	rjmp	.+14     	; 0x4c6 <__EEPROM_REGION_LENGTH__+0xc6>
 4b8:	39 e6       	ldi	r19, 0x69	; 105
 4ba:	f6 01       	movw	r30, r12
 4bc:	30 83       	st	Z, r19
 4be:	3e e6       	ldi	r19, 0x6E	; 110
 4c0:	31 83       	std	Z+1, r19	; 0x01
 4c2:	36 e6       	ldi	r19, 0x66	; 102
 4c4:	32 83       	std	Z+2, r19	; 0x02
 4c6:	fc 01       	movw	r30, r24
 4c8:	32 2f       	mov	r19, r18
 4ca:	40 e2       	ldi	r20, 0x20	; 32
 4cc:	33 23       	and	r19, r19
 4ce:	19 f0       	breq	.+6      	; 0x4d6 <__EEPROM_REGION_LENGTH__+0xd6>
 4d0:	41 93       	st	Z+, r20
 4d2:	31 50       	subi	r19, 0x01	; 1
 4d4:	fb cf       	rjmp	.-10     	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
 4d6:	fc 01       	movw	r30, r24
 4d8:	e2 0f       	add	r30, r18
 4da:	f1 1d       	adc	r31, r1
 4dc:	10 82       	st	Z, r1
 4de:	8e ef       	ldi	r24, 0xFE	; 254
 4e0:	9f ef       	ldi	r25, 0xFF	; 255
 4e2:	a6 c0       	rjmp	.+332    	; 0x630 <__EEPROM_REGION_LENGTH__+0x230>
 4e4:	21 e0       	ldi	r18, 0x01	; 1
 4e6:	30 e0       	ldi	r19, 0x00	; 0
 4e8:	91 11       	cpse	r25, r1
 4ea:	02 c0       	rjmp	.+4      	; 0x4f0 <__EEPROM_REGION_LENGTH__+0xf0>
 4ec:	20 e0       	ldi	r18, 0x00	; 0
 4ee:	30 e0       	ldi	r19, 0x00	; 0
 4f0:	16 16       	cp	r1, r22
 4f2:	17 06       	cpc	r1, r23
 4f4:	1c f4       	brge	.+6      	; 0x4fc <__EEPROM_REGION_LENGTH__+0xfc>
 4f6:	fb 01       	movw	r30, r22
 4f8:	31 96       	adiw	r30, 0x01	; 1
 4fa:	02 c0       	rjmp	.+4      	; 0x500 <__EEPROM_REGION_LENGTH__+0x100>
 4fc:	e1 e0       	ldi	r30, 0x01	; 1
 4fe:	f0 e0       	ldi	r31, 0x00	; 0
 500:	2e 0f       	add	r18, r30
 502:	3f 1f       	adc	r19, r31
 504:	bb 20       	and	r11, r11
 506:	21 f0       	breq	.+8      	; 0x510 <__EEPROM_REGION_LENGTH__+0x110>
 508:	eb 2d       	mov	r30, r11
 50a:	f0 e0       	ldi	r31, 0x00	; 0
 50c:	31 96       	adiw	r30, 0x01	; 1
 50e:	02 c0       	rjmp	.+4      	; 0x514 <__EEPROM_REGION_LENGTH__+0x114>
 510:	e0 e0       	ldi	r30, 0x00	; 0
 512:	f0 e0       	ldi	r31, 0x00	; 0
 514:	2e 0f       	add	r18, r30
 516:	3f 1f       	adc	r19, r31
 518:	e1 2f       	mov	r30, r17
 51a:	f0 e0       	ldi	r31, 0x00	; 0
 51c:	2e 17       	cp	r18, r30
 51e:	3f 07       	cpc	r19, r31
 520:	1c f4       	brge	.+6      	; 0x528 <__EEPROM_REGION_LENGTH__+0x128>
 522:	12 1b       	sub	r17, r18
 524:	21 2f       	mov	r18, r17
 526:	01 c0       	rjmp	.+2      	; 0x52a <__EEPROM_REGION_LENGTH__+0x12a>
 528:	20 e0       	ldi	r18, 0x00	; 0
 52a:	8e 2d       	mov	r24, r14
 52c:	88 71       	andi	r24, 0x18	; 24
 52e:	59 f4       	brne	.+22     	; 0x546 <__EEPROM_REGION_LENGTH__+0x146>
 530:	f6 01       	movw	r30, r12
 532:	82 2f       	mov	r24, r18
 534:	30 e2       	ldi	r19, 0x20	; 32
 536:	88 23       	and	r24, r24
 538:	19 f0       	breq	.+6      	; 0x540 <__EEPROM_REGION_LENGTH__+0x140>
 53a:	31 93       	st	Z+, r19
 53c:	81 50       	subi	r24, 0x01	; 1
 53e:	fb cf       	rjmp	.-10     	; 0x536 <__EEPROM_REGION_LENGTH__+0x136>
 540:	c2 0e       	add	r12, r18
 542:	d1 1c       	adc	r13, r1
 544:	20 e0       	ldi	r18, 0x00	; 0
 546:	99 23       	and	r25, r25
 548:	29 f0       	breq	.+10     	; 0x554 <__EEPROM_REGION_LENGTH__+0x154>
 54a:	d6 01       	movw	r26, r12
 54c:	9c 93       	st	X, r25
 54e:	f6 01       	movw	r30, r12
 550:	31 96       	adiw	r30, 0x01	; 1
 552:	6f 01       	movw	r12, r30
 554:	51 11       	cpse	r21, r1
 556:	0b c0       	rjmp	.+22     	; 0x56e <__EEPROM_REGION_LENGTH__+0x16e>
 558:	f6 01       	movw	r30, r12
 55a:	82 2f       	mov	r24, r18
 55c:	90 e3       	ldi	r25, 0x30	; 48
 55e:	88 23       	and	r24, r24
 560:	19 f0       	breq	.+6      	; 0x568 <__EEPROM_REGION_LENGTH__+0x168>
 562:	91 93       	st	Z+, r25
 564:	81 50       	subi	r24, 0x01	; 1
 566:	fb cf       	rjmp	.-10     	; 0x55e <__EEPROM_REGION_LENGTH__+0x15e>
 568:	c2 0e       	add	r12, r18
 56a:	d1 1c       	adc	r13, r1
 56c:	20 e0       	ldi	r18, 0x00	; 0
 56e:	0f 2d       	mov	r16, r15
 570:	06 0f       	add	r16, r22
 572:	9a 81       	ldd	r25, Y+2	; 0x02
 574:	34 2f       	mov	r19, r20
 576:	30 71       	andi	r19, 0x10	; 16
 578:	44 ff       	sbrs	r20, 4
 57a:	03 c0       	rjmp	.+6      	; 0x582 <__EEPROM_REGION_LENGTH__+0x182>
 57c:	91 33       	cpi	r25, 0x31	; 49
 57e:	09 f4       	brne	.+2      	; 0x582 <__EEPROM_REGION_LENGTH__+0x182>
 580:	01 50       	subi	r16, 0x01	; 1
 582:	10 16       	cp	r1, r16
 584:	24 f4       	brge	.+8      	; 0x58e <__EEPROM_REGION_LENGTH__+0x18e>
 586:	09 30       	cpi	r16, 0x09	; 9
 588:	18 f0       	brcs	.+6      	; 0x590 <__EEPROM_REGION_LENGTH__+0x190>
 58a:	08 e0       	ldi	r16, 0x08	; 8
 58c:	01 c0       	rjmp	.+2      	; 0x590 <__EEPROM_REGION_LENGTH__+0x190>
 58e:	01 e0       	ldi	r16, 0x01	; 1
 590:	ab 01       	movw	r20, r22
 592:	77 ff       	sbrs	r23, 7
 594:	02 c0       	rjmp	.+4      	; 0x59a <__EEPROM_REGION_LENGTH__+0x19a>
 596:	40 e0       	ldi	r20, 0x00	; 0
 598:	50 e0       	ldi	r21, 0x00	; 0
 59a:	fb 01       	movw	r30, r22
 59c:	e4 1b       	sub	r30, r20
 59e:	f5 0b       	sbc	r31, r21
 5a0:	a1 e0       	ldi	r26, 0x01	; 1
 5a2:	b0 e0       	ldi	r27, 0x00	; 0
 5a4:	ac 0f       	add	r26, r28
 5a6:	bd 1f       	adc	r27, r29
 5a8:	ea 0f       	add	r30, r26
 5aa:	fb 1f       	adc	r31, r27
 5ac:	8e e2       	ldi	r24, 0x2E	; 46
 5ae:	a8 2e       	mov	r10, r24
 5b0:	4b 01       	movw	r8, r22
 5b2:	80 1a       	sub	r8, r16
 5b4:	91 08       	sbc	r9, r1
 5b6:	0b 2d       	mov	r16, r11
 5b8:	10 e0       	ldi	r17, 0x00	; 0
 5ba:	11 95       	neg	r17
 5bc:	01 95       	neg	r16
 5be:	11 09       	sbc	r17, r1
 5c0:	4f 3f       	cpi	r20, 0xFF	; 255
 5c2:	bf ef       	ldi	r27, 0xFF	; 255
 5c4:	5b 07       	cpc	r21, r27
 5c6:	21 f4       	brne	.+8      	; 0x5d0 <__EEPROM_REGION_LENGTH__+0x1d0>
 5c8:	d6 01       	movw	r26, r12
 5ca:	ac 92       	st	X, r10
 5cc:	11 96       	adiw	r26, 0x01	; 1
 5ce:	6d 01       	movw	r12, r26
 5d0:	64 17       	cp	r22, r20
 5d2:	75 07       	cpc	r23, r21
 5d4:	2c f0       	brlt	.+10     	; 0x5e0 <__EEPROM_REGION_LENGTH__+0x1e0>
 5d6:	84 16       	cp	r8, r20
 5d8:	95 06       	cpc	r9, r21
 5da:	14 f4       	brge	.+4      	; 0x5e0 <__EEPROM_REGION_LENGTH__+0x1e0>
 5dc:	81 81       	ldd	r24, Z+1	; 0x01
 5de:	01 c0       	rjmp	.+2      	; 0x5e2 <__EEPROM_REGION_LENGTH__+0x1e2>
 5e0:	80 e3       	ldi	r24, 0x30	; 48
 5e2:	41 50       	subi	r20, 0x01	; 1
 5e4:	51 09       	sbc	r21, r1
 5e6:	31 96       	adiw	r30, 0x01	; 1
 5e8:	d6 01       	movw	r26, r12
 5ea:	11 96       	adiw	r26, 0x01	; 1
 5ec:	7d 01       	movw	r14, r26
 5ee:	40 17       	cp	r20, r16
 5f0:	51 07       	cpc	r21, r17
 5f2:	24 f0       	brlt	.+8      	; 0x5fc <__EEPROM_REGION_LENGTH__+0x1fc>
 5f4:	d6 01       	movw	r26, r12
 5f6:	8c 93       	st	X, r24
 5f8:	67 01       	movw	r12, r14
 5fa:	e2 cf       	rjmp	.-60     	; 0x5c0 <__EEPROM_REGION_LENGTH__+0x1c0>
 5fc:	64 17       	cp	r22, r20
 5fe:	75 07       	cpc	r23, r21
 600:	39 f4       	brne	.+14     	; 0x610 <__EEPROM_REGION_LENGTH__+0x210>
 602:	96 33       	cpi	r25, 0x36	; 54
 604:	20 f4       	brcc	.+8      	; 0x60e <__EEPROM_REGION_LENGTH__+0x20e>
 606:	95 33       	cpi	r25, 0x35	; 53
 608:	19 f4       	brne	.+6      	; 0x610 <__EEPROM_REGION_LENGTH__+0x210>
 60a:	31 11       	cpse	r19, r1
 60c:	01 c0       	rjmp	.+2      	; 0x610 <__EEPROM_REGION_LENGTH__+0x210>
 60e:	81 e3       	ldi	r24, 0x31	; 49
 610:	f6 01       	movw	r30, r12
 612:	80 83       	st	Z, r24
 614:	f7 01       	movw	r30, r14
 616:	82 2f       	mov	r24, r18
 618:	90 e2       	ldi	r25, 0x20	; 32
 61a:	88 23       	and	r24, r24
 61c:	19 f0       	breq	.+6      	; 0x624 <__EEPROM_REGION_LENGTH__+0x224>
 61e:	91 93       	st	Z+, r25
 620:	81 50       	subi	r24, 0x01	; 1
 622:	fb cf       	rjmp	.-10     	; 0x61a <__EEPROM_REGION_LENGTH__+0x21a>
 624:	f7 01       	movw	r30, r14
 626:	e2 0f       	add	r30, r18
 628:	f1 1d       	adc	r31, r1
 62a:	10 82       	st	Z, r1
 62c:	80 e0       	ldi	r24, 0x00	; 0
 62e:	90 e0       	ldi	r25, 0x00	; 0
 630:	29 96       	adiw	r28, 0x09	; 9
 632:	ec e0       	ldi	r30, 0x0C	; 12
 634:	0c 94 26 04 	jmp	0x84c	; 0x84c <__epilogue_restores__+0xc>

00000638 <__ftoa_engine>:
 638:	28 30       	cpi	r18, 0x08	; 8
 63a:	08 f0       	brcs	.+2      	; 0x63e <__ftoa_engine+0x6>
 63c:	27 e0       	ldi	r18, 0x07	; 7
 63e:	33 27       	eor	r19, r19
 640:	da 01       	movw	r26, r20
 642:	99 0f       	add	r25, r25
 644:	31 1d       	adc	r19, r1
 646:	87 fd       	sbrc	r24, 7
 648:	91 60       	ori	r25, 0x01	; 1
 64a:	00 96       	adiw	r24, 0x00	; 0
 64c:	61 05       	cpc	r22, r1
 64e:	71 05       	cpc	r23, r1
 650:	39 f4       	brne	.+14     	; 0x660 <__ftoa_engine+0x28>
 652:	32 60       	ori	r19, 0x02	; 2
 654:	2e 5f       	subi	r18, 0xFE	; 254
 656:	3d 93       	st	X+, r19
 658:	30 e3       	ldi	r19, 0x30	; 48
 65a:	2a 95       	dec	r18
 65c:	e1 f7       	brne	.-8      	; 0x656 <__ftoa_engine+0x1e>
 65e:	08 95       	ret
 660:	9f 3f       	cpi	r25, 0xFF	; 255
 662:	30 f0       	brcs	.+12     	; 0x670 <__ftoa_engine+0x38>
 664:	80 38       	cpi	r24, 0x80	; 128
 666:	71 05       	cpc	r23, r1
 668:	61 05       	cpc	r22, r1
 66a:	09 f0       	breq	.+2      	; 0x66e <__ftoa_engine+0x36>
 66c:	3c 5f       	subi	r19, 0xFC	; 252
 66e:	3c 5f       	subi	r19, 0xFC	; 252
 670:	3d 93       	st	X+, r19
 672:	91 30       	cpi	r25, 0x01	; 1
 674:	08 f0       	brcs	.+2      	; 0x678 <__ftoa_engine+0x40>
 676:	80 68       	ori	r24, 0x80	; 128
 678:	91 1d       	adc	r25, r1
 67a:	df 93       	push	r29
 67c:	cf 93       	push	r28
 67e:	1f 93       	push	r17
 680:	0f 93       	push	r16
 682:	ff 92       	push	r15
 684:	ef 92       	push	r14
 686:	19 2f       	mov	r17, r25
 688:	98 7f       	andi	r25, 0xF8	; 248
 68a:	96 95       	lsr	r25
 68c:	e9 2f       	mov	r30, r25
 68e:	96 95       	lsr	r25
 690:	96 95       	lsr	r25
 692:	e9 0f       	add	r30, r25
 694:	ff 27       	eor	r31, r31
 696:	e2 55       	subi	r30, 0x52	; 82
 698:	ff 4f       	sbci	r31, 0xFF	; 255
 69a:	99 27       	eor	r25, r25
 69c:	33 27       	eor	r19, r19
 69e:	ee 24       	eor	r14, r14
 6a0:	ff 24       	eor	r15, r15
 6a2:	a7 01       	movw	r20, r14
 6a4:	e7 01       	movw	r28, r14
 6a6:	05 90       	lpm	r0, Z+
 6a8:	08 94       	sec
 6aa:	07 94       	ror	r0
 6ac:	28 f4       	brcc	.+10     	; 0x6b8 <__ftoa_engine+0x80>
 6ae:	36 0f       	add	r19, r22
 6b0:	e7 1e       	adc	r14, r23
 6b2:	f8 1e       	adc	r15, r24
 6b4:	49 1f       	adc	r20, r25
 6b6:	51 1d       	adc	r21, r1
 6b8:	66 0f       	add	r22, r22
 6ba:	77 1f       	adc	r23, r23
 6bc:	88 1f       	adc	r24, r24
 6be:	99 1f       	adc	r25, r25
 6c0:	06 94       	lsr	r0
 6c2:	a1 f7       	brne	.-24     	; 0x6ac <__ftoa_engine+0x74>
 6c4:	05 90       	lpm	r0, Z+
 6c6:	07 94       	ror	r0
 6c8:	28 f4       	brcc	.+10     	; 0x6d4 <__ftoa_engine+0x9c>
 6ca:	e7 0e       	add	r14, r23
 6cc:	f8 1e       	adc	r15, r24
 6ce:	49 1f       	adc	r20, r25
 6d0:	56 1f       	adc	r21, r22
 6d2:	c1 1d       	adc	r28, r1
 6d4:	77 0f       	add	r23, r23
 6d6:	88 1f       	adc	r24, r24
 6d8:	99 1f       	adc	r25, r25
 6da:	66 1f       	adc	r22, r22
 6dc:	06 94       	lsr	r0
 6de:	a1 f7       	brne	.-24     	; 0x6c8 <__ftoa_engine+0x90>
 6e0:	05 90       	lpm	r0, Z+
 6e2:	07 94       	ror	r0
 6e4:	28 f4       	brcc	.+10     	; 0x6f0 <__ftoa_engine+0xb8>
 6e6:	f8 0e       	add	r15, r24
 6e8:	49 1f       	adc	r20, r25
 6ea:	56 1f       	adc	r21, r22
 6ec:	c7 1f       	adc	r28, r23
 6ee:	d1 1d       	adc	r29, r1
 6f0:	88 0f       	add	r24, r24
 6f2:	99 1f       	adc	r25, r25
 6f4:	66 1f       	adc	r22, r22
 6f6:	77 1f       	adc	r23, r23
 6f8:	06 94       	lsr	r0
 6fa:	a1 f7       	brne	.-24     	; 0x6e4 <__ftoa_engine+0xac>
 6fc:	05 90       	lpm	r0, Z+
 6fe:	07 94       	ror	r0
 700:	20 f4       	brcc	.+8      	; 0x70a <__ftoa_engine+0xd2>
 702:	49 0f       	add	r20, r25
 704:	56 1f       	adc	r21, r22
 706:	c7 1f       	adc	r28, r23
 708:	d8 1f       	adc	r29, r24
 70a:	99 0f       	add	r25, r25
 70c:	66 1f       	adc	r22, r22
 70e:	77 1f       	adc	r23, r23
 710:	88 1f       	adc	r24, r24
 712:	06 94       	lsr	r0
 714:	a9 f7       	brne	.-22     	; 0x700 <__ftoa_engine+0xc8>
 716:	84 91       	lpm	r24, Z
 718:	10 95       	com	r17
 71a:	17 70       	andi	r17, 0x07	; 7
 71c:	41 f0       	breq	.+16     	; 0x72e <__ftoa_engine+0xf6>
 71e:	d6 95       	lsr	r29
 720:	c7 95       	ror	r28
 722:	57 95       	ror	r21
 724:	47 95       	ror	r20
 726:	f7 94       	ror	r15
 728:	e7 94       	ror	r14
 72a:	1a 95       	dec	r17
 72c:	c1 f7       	brne	.-16     	; 0x71e <__ftoa_engine+0xe6>
 72e:	e4 e5       	ldi	r30, 0x54	; 84
 730:	f0 e0       	ldi	r31, 0x00	; 0
 732:	68 94       	set
 734:	15 90       	lpm	r1, Z+
 736:	15 91       	lpm	r17, Z+
 738:	35 91       	lpm	r19, Z+
 73a:	65 91       	lpm	r22, Z+
 73c:	95 91       	lpm	r25, Z+
 73e:	05 90       	lpm	r0, Z+
 740:	7f e2       	ldi	r23, 0x2F	; 47
 742:	73 95       	inc	r23
 744:	e1 18       	sub	r14, r1
 746:	f1 0a       	sbc	r15, r17
 748:	43 0b       	sbc	r20, r19
 74a:	56 0b       	sbc	r21, r22
 74c:	c9 0b       	sbc	r28, r25
 74e:	d0 09       	sbc	r29, r0
 750:	c0 f7       	brcc	.-16     	; 0x742 <__ftoa_engine+0x10a>
 752:	e1 0c       	add	r14, r1
 754:	f1 1e       	adc	r15, r17
 756:	43 1f       	adc	r20, r19
 758:	56 1f       	adc	r21, r22
 75a:	c9 1f       	adc	r28, r25
 75c:	d0 1d       	adc	r29, r0
 75e:	7e f4       	brtc	.+30     	; 0x77e <__ftoa_engine+0x146>
 760:	70 33       	cpi	r23, 0x30	; 48
 762:	11 f4       	brne	.+4      	; 0x768 <__ftoa_engine+0x130>
 764:	8a 95       	dec	r24
 766:	e6 cf       	rjmp	.-52     	; 0x734 <__ftoa_engine+0xfc>
 768:	e8 94       	clt
 76a:	01 50       	subi	r16, 0x01	; 1
 76c:	30 f0       	brcs	.+12     	; 0x77a <__ftoa_engine+0x142>
 76e:	08 0f       	add	r16, r24
 770:	0a f4       	brpl	.+2      	; 0x774 <__ftoa_engine+0x13c>
 772:	00 27       	eor	r16, r16
 774:	02 17       	cp	r16, r18
 776:	08 f4       	brcc	.+2      	; 0x77a <__ftoa_engine+0x142>
 778:	20 2f       	mov	r18, r16
 77a:	23 95       	inc	r18
 77c:	02 2f       	mov	r16, r18
 77e:	7a 33       	cpi	r23, 0x3A	; 58
 780:	28 f0       	brcs	.+10     	; 0x78c <__ftoa_engine+0x154>
 782:	79 e3       	ldi	r23, 0x39	; 57
 784:	7d 93       	st	X+, r23
 786:	2a 95       	dec	r18
 788:	e9 f7       	brne	.-6      	; 0x784 <__ftoa_engine+0x14c>
 78a:	10 c0       	rjmp	.+32     	; 0x7ac <__ftoa_engine+0x174>
 78c:	7d 93       	st	X+, r23
 78e:	2a 95       	dec	r18
 790:	89 f6       	brne	.-94     	; 0x734 <__ftoa_engine+0xfc>
 792:	06 94       	lsr	r0
 794:	97 95       	ror	r25
 796:	67 95       	ror	r22
 798:	37 95       	ror	r19
 79a:	17 95       	ror	r17
 79c:	17 94       	ror	r1
 79e:	e1 18       	sub	r14, r1
 7a0:	f1 0a       	sbc	r15, r17
 7a2:	43 0b       	sbc	r20, r19
 7a4:	56 0b       	sbc	r21, r22
 7a6:	c9 0b       	sbc	r28, r25
 7a8:	d0 09       	sbc	r29, r0
 7aa:	98 f0       	brcs	.+38     	; 0x7d2 <__ftoa_engine+0x19a>
 7ac:	23 95       	inc	r18
 7ae:	7e 91       	ld	r23, -X
 7b0:	73 95       	inc	r23
 7b2:	7a 33       	cpi	r23, 0x3A	; 58
 7b4:	08 f0       	brcs	.+2      	; 0x7b8 <__ftoa_engine+0x180>
 7b6:	70 e3       	ldi	r23, 0x30	; 48
 7b8:	7c 93       	st	X, r23
 7ba:	20 13       	cpse	r18, r16
 7bc:	b8 f7       	brcc	.-18     	; 0x7ac <__ftoa_engine+0x174>
 7be:	7e 91       	ld	r23, -X
 7c0:	70 61       	ori	r23, 0x10	; 16
 7c2:	7d 93       	st	X+, r23
 7c4:	30 f0       	brcs	.+12     	; 0x7d2 <__ftoa_engine+0x19a>
 7c6:	83 95       	inc	r24
 7c8:	71 e3       	ldi	r23, 0x31	; 49
 7ca:	7d 93       	st	X+, r23
 7cc:	70 e3       	ldi	r23, 0x30	; 48
 7ce:	2a 95       	dec	r18
 7d0:	e1 f7       	brne	.-8      	; 0x7ca <__ftoa_engine+0x192>
 7d2:	11 24       	eor	r1, r1
 7d4:	ef 90       	pop	r14
 7d6:	ff 90       	pop	r15
 7d8:	0f 91       	pop	r16
 7da:	1f 91       	pop	r17
 7dc:	cf 91       	pop	r28
 7de:	df 91       	pop	r29
 7e0:	99 27       	eor	r25, r25
 7e2:	87 fd       	sbrc	r24, 7
 7e4:	90 95       	com	r25
 7e6:	08 95       	ret

000007e8 <strrev>:
 7e8:	dc 01       	movw	r26, r24
 7ea:	fc 01       	movw	r30, r24
 7ec:	67 2f       	mov	r22, r23
 7ee:	71 91       	ld	r23, Z+
 7f0:	77 23       	and	r23, r23
 7f2:	e1 f7       	brne	.-8      	; 0x7ec <strrev+0x4>
 7f4:	32 97       	sbiw	r30, 0x02	; 2
 7f6:	04 c0       	rjmp	.+8      	; 0x800 <__DATA_REGION_LENGTH__>
 7f8:	7c 91       	ld	r23, X
 7fa:	6d 93       	st	X+, r22
 7fc:	70 83       	st	Z, r23
 7fe:	62 91       	ld	r22, -Z
 800:	ae 17       	cp	r26, r30
 802:	bf 07       	cpc	r27, r31
 804:	c8 f3       	brcs	.-14     	; 0x7f8 <strrev+0x10>
 806:	08 95       	ret

00000808 <__prologue_saves__>:
 808:	2f 92       	push	r2
 80a:	3f 92       	push	r3
 80c:	4f 92       	push	r4
 80e:	5f 92       	push	r5
 810:	6f 92       	push	r6
 812:	7f 92       	push	r7
 814:	8f 92       	push	r8
 816:	9f 92       	push	r9
 818:	af 92       	push	r10
 81a:	bf 92       	push	r11
 81c:	cf 92       	push	r12
 81e:	df 92       	push	r13
 820:	ef 92       	push	r14
 822:	ff 92       	push	r15
 824:	0f 93       	push	r16
 826:	1f 93       	push	r17
 828:	cf 93       	push	r28
 82a:	df 93       	push	r29
 82c:	cd b7       	in	r28, 0x3d	; 61
 82e:	de b7       	in	r29, 0x3e	; 62
 830:	ca 1b       	sub	r28, r26
 832:	db 0b       	sbc	r29, r27
 834:	0f b6       	in	r0, 0x3f	; 63
 836:	f8 94       	cli
 838:	de bf       	out	0x3e, r29	; 62
 83a:	0f be       	out	0x3f, r0	; 63
 83c:	cd bf       	out	0x3d, r28	; 61
 83e:	09 94       	ijmp

00000840 <__epilogue_restores__>:
 840:	2a 88       	ldd	r2, Y+18	; 0x12
 842:	39 88       	ldd	r3, Y+17	; 0x11
 844:	48 88       	ldd	r4, Y+16	; 0x10
 846:	5f 84       	ldd	r5, Y+15	; 0x0f
 848:	6e 84       	ldd	r6, Y+14	; 0x0e
 84a:	7d 84       	ldd	r7, Y+13	; 0x0d
 84c:	8c 84       	ldd	r8, Y+12	; 0x0c
 84e:	9b 84       	ldd	r9, Y+11	; 0x0b
 850:	aa 84       	ldd	r10, Y+10	; 0x0a
 852:	b9 84       	ldd	r11, Y+9	; 0x09
 854:	c8 84       	ldd	r12, Y+8	; 0x08
 856:	df 80       	ldd	r13, Y+7	; 0x07
 858:	ee 80       	ldd	r14, Y+6	; 0x06
 85a:	fd 80       	ldd	r15, Y+5	; 0x05
 85c:	0c 81       	ldd	r16, Y+4	; 0x04
 85e:	1b 81       	ldd	r17, Y+3	; 0x03
 860:	aa 81       	ldd	r26, Y+2	; 0x02
 862:	b9 81       	ldd	r27, Y+1	; 0x01
 864:	ce 0f       	add	r28, r30
 866:	d1 1d       	adc	r29, r1
 868:	0f b6       	in	r0, 0x3f	; 63
 86a:	f8 94       	cli
 86c:	de bf       	out	0x3e, r29	; 62
 86e:	0f be       	out	0x3f, r0	; 63
 870:	cd bf       	out	0x3d, r28	; 61
 872:	ed 01       	movw	r28, r26
 874:	08 95       	ret

00000876 <_exit>:
 876:	f8 94       	cli

00000878 <__stop_program>:
 878:	ff cf       	rjmp	.-2      	; 0x878 <__stop_program>
